//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WebApplication2
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class UIADbEntities : DbContext
    {
        public UIADbEntities()
            : base("name=UIADbEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Aircraft> Aircraft { get; set; }
        public virtual DbSet<Airline> Airlines { get; set; }
        public virtual DbSet<Class> Classes { get; set; }
        public virtual DbSet<Customer> Customers { get; set; }
        public virtual DbSet<Farebase> Farebases { get; set; }
        public virtual DbSet<Flight> Flights { get; set; }
        public virtual DbSet<Passenger> Passengers { get; set; }
        public virtual DbSet<Reservation> Reservations { get; set; }
        public virtual DbSet<SeatGroup> SeatGroups { get; set; }
        public virtual DbSet<SeatLabel> SeatLabels { get; set; }
        public virtual DbSet<Ticket> Tickets { get; set; }
        public virtual DbSet<FarebaseGroup> FarebaseGroups { get; set; }
        public virtual DbSet<PassengerSeat> PassengerSeats { get; set; }
        public virtual DbSet<Route> Routes { get; set; }
    
        public virtual int BookFlightMultiway(string fname, string lname, string passp, Nullable<int> ages, string gender, string email, string flight1, string flight2)
        {
            var fnameParameter = fname != null ?
                new ObjectParameter("Fname", fname) :
                new ObjectParameter("Fname", typeof(string));
    
            var lnameParameter = lname != null ?
                new ObjectParameter("Lname", lname) :
                new ObjectParameter("Lname", typeof(string));
    
            var passpParameter = passp != null ?
                new ObjectParameter("Passp", passp) :
                new ObjectParameter("Passp", typeof(string));
    
            var agesParameter = ages.HasValue ?
                new ObjectParameter("Ages", ages) :
                new ObjectParameter("Ages", typeof(int));
    
            var genderParameter = gender != null ?
                new ObjectParameter("Gender", gender) :
                new ObjectParameter("Gender", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var flight1Parameter = flight1 != null ?
                new ObjectParameter("Flight1", flight1) :
                new ObjectParameter("Flight1", typeof(string));
    
            var flight2Parameter = flight2 != null ?
                new ObjectParameter("Flight2", flight2) :
                new ObjectParameter("Flight2", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("BookFlightMultiway", fnameParameter, lnameParameter, passpParameter, agesParameter, genderParameter, emailParameter, flight1Parameter, flight2Parameter);
        }
    
        public virtual int BookFlightOneway(string fname, string lname, string passp, Nullable<int> ages, string gender, string email, string flight1)
        {
            var fnameParameter = fname != null ?
                new ObjectParameter("Fname", fname) :
                new ObjectParameter("Fname", typeof(string));
    
            var lnameParameter = lname != null ?
                new ObjectParameter("Lname", lname) :
                new ObjectParameter("Lname", typeof(string));
    
            var passpParameter = passp != null ?
                new ObjectParameter("Passp", passp) :
                new ObjectParameter("Passp", typeof(string));
    
            var agesParameter = ages.HasValue ?
                new ObjectParameter("Ages", ages) :
                new ObjectParameter("Ages", typeof(int));
    
            var genderParameter = gender != null ?
                new ObjectParameter("Gender", gender) :
                new ObjectParameter("Gender", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var flight1Parameter = flight1 != null ?
                new ObjectParameter("Flight1", flight1) :
                new ObjectParameter("Flight1", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("BookFlightOneway", fnameParameter, lnameParameter, passpParameter, agesParameter, genderParameter, emailParameter, flight1Parameter);
        }
    
        public virtual ObjectResult<GetBookedFlight_Result> GetBookedFlight(string email)
        {
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetBookedFlight_Result>("GetBookedFlight", emailParameter);
        }
    
        public virtual ObjectResult<string> GetCustomerLogin(string userName, string password)
        {
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("GetCustomerLogin", userNameParameter, passwordParameter);
        }
    
        public virtual ObjectResult<GetFlight_Result> GetFlight(string fromdate, string fromloc, string toloc)
        {
            var fromdateParameter = fromdate != null ?
                new ObjectParameter("fromdate", fromdate) :
                new ObjectParameter("fromdate", typeof(string));
    
            var fromlocParameter = fromloc != null ?
                new ObjectParameter("fromloc", fromloc) :
                new ObjectParameter("fromloc", typeof(string));
    
            var tolocParameter = toloc != null ?
                new ObjectParameter("toloc", toloc) :
                new ObjectParameter("toloc", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetFlight_Result>("GetFlight", fromdateParameter, fromlocParameter, tolocParameter);
        }
    
        public virtual ObjectResult<GetSelectedFlight_Result> GetSelectedFlight(string flightid1, string flightid2)
        {
            var flightid1Parameter = flightid1 != null ?
                new ObjectParameter("flightid1", flightid1) :
                new ObjectParameter("flightid1", typeof(string));
    
            var flightid2Parameter = flightid2 != null ?
                new ObjectParameter("flightid2", flightid2) :
                new ObjectParameter("flightid2", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetSelectedFlight_Result>("GetSelectedFlight", flightid1Parameter, flightid2Parameter);
        }
    
        public virtual ObjectResult<string> RegisterAccount(string firstname, string lastname, string password, string email)
        {
            var firstnameParameter = firstname != null ?
                new ObjectParameter("Firstname", firstname) :
                new ObjectParameter("Firstname", typeof(string));
    
            var lastnameParameter = lastname != null ?
                new ObjectParameter("Lastname", lastname) :
                new ObjectParameter("Lastname", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("RegisterAccount", firstnameParameter, lastnameParameter, passwordParameter, emailParameter);
        }
    }
}
